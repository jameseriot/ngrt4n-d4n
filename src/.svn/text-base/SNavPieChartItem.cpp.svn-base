/*
 * SNavChartItem.cpp
 *
 *  Created on: 25 sept. 2010
 *      Author: chakode
 */

#include "../include/SNavPieChartItem.hpp"

SNavPieChartItem::SNavPieChartItem(const QRectF & _bounding_rect,
		const qreal & _start_angle, const qreal & _proportion, const QColor & _color, QWidget * _parent)
:  QWidget(_parent),
   pieChartBoundingRect(_bounding_rect),
   startAngle(_start_angle),
   proportion(_proportion),
   fillColor1(_color),
   fillColor2(_color)
{
	path.moveTo( pieChartBoundingRect.center() );
	path.arcTo(pieChartBoundingRect, startAngle, proportion);
	path.closeSubpath();
	setStyleSheet("background:transparent") ;
}

QSize SNavPieChartItem::minimumSizeHint() const
		{
	return QSize(350, 200) ;
		}

 QSize SNavPieChartItem::sizeHint() const
		{
	return QSize(500, 300) ;
		}

void SNavPieChartItem::setFillRule(Qt::FillRule rule)
{
	path.setFillRule(rule) ;
	update() ;
}

void SNavPieChartItem::setFillGradient(const QColor &color1, const QColor &color2)
{
	fillColor1 = color1;
	fillColor2 = color2;
	update() ;
}

void SNavPieChartItem::setPath(void)
{
	path.moveTo( pieChartBoundingRect.center() );
	path.arcTo(pieChartBoundingRect, startAngle, proportion);
	path.closeSubpath();
}

void SNavPieChartItem::paintEvent(QPaintEvent *)
{
	QPainter painter(this) ;
	painter.setRenderHint(QPainter::Antialiasing) ;
	QLinearGradient gradient(0, 0, 0, 100) ;
	gradient.setColorAt(0.0, fillColor1) ;
	gradient.setColorAt(1.0, fillColor2) ;
	painter.setBrush(gradient) ;
	painter.drawPath(path) ;
}
