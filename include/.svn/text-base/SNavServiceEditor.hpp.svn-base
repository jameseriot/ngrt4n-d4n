/*
 * SNAVServiceEditor.h
 *
 *  Created on: 26 juin 2010
 *      Author: chakode
 */

#ifndef SNAVSERVICEEDITOR_H_
#define SNAVSERVICEEDITOR_H_

#include "SNavBase.hpp"
#include "SNavParser.hpp"


class SNavServiceEditor : public QWidget
{
	Q_OBJECT

public:

	typedef QMap<QString, QWidget*> ItemsList ;

	SNavServiceEditor( QWidget* = 0);

	virtual ~SNavServiceEditor();

	void layoutEditorComponents(void) ;

	void setContent( const NodeListT &, const QString & ) ;

	void setContent( NodeListT::const_iterator ) ;

	bool updateNode( NodeListT &, const QString& ) ;

	bool updateNode(NodeListT::iterator & _node_it) ;

	void setCheckListField( const NagiosChecksT& );

	void setEnableFields( const bool& );

	void setLowLevelAlarmComponentEnabled(bool enable){
		editorItemsList[CHECK_LIST_FIELD]->setEnabled(enable);
	}

	ItemsList* itemList( void ) {
		return &editorItemsList;
	}

	QLineEdit* nameField(void){
		return dynamic_cast<QLineEdit*>(editorItemsList[NAME_FIELD]) ;
	}

	QComboBox* typeField(void) const {
		return dynamic_cast<QComboBox*>(editorItemsList[TYPE_FIELD]);
	}

	QComboBox* statusCalcRuleField(void) const {
		return dynamic_cast<QComboBox*>(editorItemsList[STATUS_CALC_RULE_FIELD]);
	}

	inline QComboBox* iconField(void) const {
		return dynamic_cast<QComboBox*>(editorItemsList[ICON_FIELD]);
	}

	inline QTextEdit* descriptionField(void) const {
		return dynamic_cast<QTextEdit*>(editorItemsList[DESCRIPTION_FIELD]);
	}

	inline QTextEdit* alarmMsgField(void){
		return dynamic_cast<QTextEdit*>(editorItemsList[ALARM_MSG_FIELD]) ;
	}

	inline QTextEdit* notificationMsgField(void){
		return dynamic_cast<QTextEdit*>(editorItemsList[NOTIFICATION_MSG_FIELD]) ;
	}

	inline QComboBox* checkField(void){
		return dynamic_cast<QComboBox*>(editorItemsList[CHECK_FIELD]) ;
	}

	inline QListWidget* checkListField(void){
		return dynamic_cast<QListWidget*>(editorItemsList[CHECK_LIST_FIELD]) ;
	}


public slots:
	void handleSaveClick(void) ;
	void handleCloseClick(void ) ;
	void handleReturnPressed(void) ;
	void handleNodeTypeChanged(const QString &) ;
	void handleNodeTypeActivated( const QString & _text) ;


	signals:
	void saveClicked(void) ;
	void closeClicked(void) ;
	void returnPressed(void) ;
	void nodeTypeActivated(qint32) ;


private:
	SNavSettings* settings ;
	qint32 editorLayoutRowCount;
	qint32 editorLayoutColumnCount;
	qint16 currentLine;
	ItemsList editorItemsList;
	QGridLayout* layout;
	QDialogButtonBox* buttonBox;


	void addEvent(void) ;

	void loadStatusFile( void ) ;

	void loadLabelFields(void);

	void loadDescriptionFields(void);

	void loadTypeFields(void);

	void loadPriorityFields(void);

	void loadAlarmMsgFields(void);

	void loadNotificationMsgFields(void);

	void loadIconFields(void);

	void loadCheckField(void);

	void loadButtonBox(void);


};

#endif /* SNAVSERVICEEDITOR_H_ */
